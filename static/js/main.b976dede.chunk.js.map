{"version":3,"sources":["utils.js","game/levels.js","game/vector.js","game/core.js","components/level.js","components/lives.js","components/block.js","components/paddle.js","components/ball.js","components/scene.js","App.js","components/page.js","serviceWorker.js","index.js"],"names":["getRange","length","Array","keys","getRandomFrom","args","Math","floor","random","registerListener","eventName","handler","window","addEventListener","removeEventListener","getRandomBlock","getBlocks","rows","columns","map","LEVELS","lives","paddleWidth","speed","blocks","Vector","x","y","this","number","hypot","scaleBy","other","amt","dotProduct","normal","subtract","projectOn","degrees","radians","PI","toRadians","cos","sin","atan2","crossProduct","BLOCK_HEIGHT","PADDLE_HEIGHT","MOVEMENT","LEFT","RIGHT","UP","DOWN","LEFT_UP","add","normalize","RIGHT_UP","getInitialPaddleAndBall","width","height","paddleY","paddle","position","ball","center","BALL_RADIUS","radius","direction","getGameStateFromLevel","arrays","blocksStart","rowsOfBlocks","row","i","density","j","size","reduce","acc","isInBoundaries","oneSide","otherSide","oneBoundary","otherBoundary","getNewGameState","state","movement","timespan","distance","withNewX","getNewPaddle","oldDirection","newBallCenter","ballBottom","withNewBallProps","props","withNewBallDirection","distorted","vector","distortionLevel","getComponent","distortion","getDistortedDirection","reflect","minAngle","angle","angleBetween","maxAngle","rotate","getAdjustedVector","ballLeft","ballRight","ballTop","paddleLeft","paddleRight","paddleTop","abs","array","element","block","find","newBlock","filter","e","oldElement","newElement","updateElement","blockTop","blockBottom","blockLeft","getNewBallNormal","level","unit","fontSize","className","containerWidth","rx","colors","fill","cx","cy","r","MOVEMENT_KEYS","getProjectors","containerSize","gameSize","widthRatio","heightRatio","unitOnScreen","min","projectDistance","projectVector","getInitialState","inState","localStorage","getItem","parseInt","getInitialLevel","game","time","Date","now","stopTime","undefined","ACTION","HANDLER","key","includes","newState","newGame","setItem","reducer","type","payload","useReducer","dispatch","act","useEffect","timerId","setInterval","unregisterKeydown","which","unregisterKeyup","clearInterval","viewWidth","Page","sceneContainer","useRef","useState","setSize","onResize","current","getBoundingClientRect","unregisterResizeListener","ref","Boolean","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b976dede.chunk.js","sourcesContent":["export const toDegrees = (radians) => (radians * 180) / Math.PI;\r\nexport const toRadians = (degrees) => (degrees * Math.PI) / 180;\r\n\r\nexport const getRange = (length) => [...Array(length).keys()];\r\nexport const getRandomFrom = (...args) =>\r\n  args[Math.floor(Math.random() * args.length)];\r\nexport const flatten = (arrays) =>\r\n  arrays.reduce((acc, row) => [...acc, ...row], []);\r\nexport const withoutElement = (array, element) =>\r\n  array.filter((e) => e !== element);\r\nexport const updateElement = (array, oldElement, newElement) =>\r\n  array.map((e) => (e === oldElement ? newElement : e));\r\n\r\nexport const registerListener = (eventName, handler) => {\r\n  window.addEventListener(eventName, handler);\r\n  return () => window.removeEventListener(eventName, handler);\r\n};\r\n","import { getRange } from \"../utils\";\r\n\r\nexport const BLOCK_MAX_DENSITY = 3;\r\n\r\nconst getRandomBlock = () => Math.floor(Math.random() * BLOCK_MAX_DENSITY);\r\n\r\nconst getBlocks = (rows, columns) =>\r\n  getRange(rows).map(() => getRange(columns).map(getRandomBlock));\r\n\r\nexport const LEVELS = [\r\n  {\r\n    lives: 5,\r\n    paddleWidth: 3.5,\r\n    speed: 1,\r\n    blocks: getBlocks(3, 6)\r\n  },\r\n  {\r\n    lives: 4,\r\n    paddleWidth: 3,\r\n    speed: 1.4,\r\n    blocks: getBlocks(4, 7)\r\n  },\r\n  {\r\n    lives: 3,\r\n    paddleWidth: 2.5,\r\n    speed: 1.8,\r\n    blocks: getBlocks(5, 8)\r\n  },\r\n  {\r\n    lives: 3,\r\n    paddleWidth: 2,\r\n    speed: 2.2,\r\n    blocks: getBlocks(6, 9)\r\n  }\r\n];\r\n","import { toDegrees, toRadians } from \"../utils\";\r\n\r\nexport default class Vector {\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  scaleBy(number) {\r\n    return new Vector(this.x * number, this.y * number);\r\n  }\r\n\r\n  length() {\r\n    return Math.hypot(this.x, this.y);\r\n  }\r\n\r\n  add({ x, y }) {\r\n    return new Vector(this.x + x, this.y + y);\r\n  }\r\n\r\n  normalize() {\r\n    return this.scaleBy(1 / this.length());\r\n  }\r\n\r\n  subtract({ x, y }) {\r\n    return new Vector(this.x - x, this.y - y);\r\n  }\r\n\r\n  dotProduct({ x, y }) {\r\n    return this.x * x + this.y * y;\r\n  }\r\n\r\n  projectOn(other) {\r\n    const amt = this.dotProduct(other) / other.length();\r\n    return new Vector(amt * other.x, amt * other.y);\r\n  }\r\n\r\n  reflect(normal) {\r\n    return this.subtract(this.projectOn(normal).scaleBy(2));\r\n  }\r\n\r\n  rotate(degrees) {\r\n    const radians = toRadians(degrees);\r\n    const cos = Math.cos(radians);\r\n    const sin = Math.sin(radians);\r\n\r\n    return new Vector(this.x * cos - this.y * sin, this.x * sin + this.y * cos);\r\n  }\r\n\r\n  crossProduct({ x, y }) {\r\n    return this.x * y - x * this.y;\r\n  }\r\n\r\n  angleBetween(other) {\r\n    return toDegrees(\r\n      Math.atan2(this.crossProduct(other), this.dotProduct(other))\r\n    );\r\n  }\r\n}\r\n","import Vector from \"./vector\";\r\nimport {\r\n  flatten,\r\n  getRandomFrom,\r\n  withoutElement,\r\n  updateElement\r\n} from \"../utils\";\r\n\r\nconst PADDLE_AREA = 1 / 3;\r\nconst BLOCK_HEIGHT = 1 / 3;\r\nconst PADDLE_HEIGHT = BLOCK_HEIGHT;\r\nconst BALL_RADIUS = 1 / 5;\r\nconst DISTANCE_IN_MS = 0.005;\r\n\r\nexport const MOVEMENT = {\r\n  LEFT: \"LEFT\",\r\n  RIGHT: \"RIGHT\"\r\n};\r\n\r\nconst LEFT = new Vector(-1, 0);\r\nconst RIGHT = new Vector(1, 0);\r\nconst UP = new Vector(0, -1);\r\nconst DOWN = new Vector(0, 1);\r\n\r\nconst LEFT_UP = LEFT.add(UP).normalize();\r\nconst RIGHT_UP = RIGHT.add(UP).normalize();\r\n\r\nexport const getInitialPaddleAndBall = (width, height, paddleWidth) => {\r\n  const paddleY = height - PADDLE_HEIGHT;\r\n  const paddle = {\r\n    position: new Vector((width - paddleWidth) / 2, paddleY),\r\n    width: paddleWidth,\r\n    height: PADDLE_HEIGHT\r\n  };\r\n  const ball = {\r\n    center: new Vector(height / 2, paddleY - BALL_RADIUS * 2),\r\n    radius: BALL_RADIUS,\r\n    direction: getRandomFrom(LEFT_UP, RIGHT_UP)\r\n  };\r\n\r\n  return {\r\n    paddle,\r\n    ball\r\n  };\r\n};\r\n\r\nexport const getGameStateFromLevel = ({\r\n  lives,\r\n  paddleWidth,\r\n  speed,\r\n  blocks\r\n}) => {\r\n  const width = blocks[0].length;\r\n  const height = width;\r\n\r\n  const blocksStart =\r\n    (height - height * PADDLE_AREA - blocks.length * BLOCK_HEIGHT) / 2;\r\n\r\n  const rowsOfBlocks = blocks.map((row, i) =>\r\n    row.map((density, j) => ({\r\n      density,\r\n      position: new Vector(j, blocksStart + i * BLOCK_HEIGHT),\r\n      width: 1,\r\n      height: BLOCK_HEIGHT\r\n    }))\r\n  );\r\n\r\n  const size = {\r\n    width,\r\n    height\r\n  };\r\n  return {\r\n    size,\r\n    blocks: flatten(rowsOfBlocks),\r\n    ...getInitialPaddleAndBall(width, height, paddleWidth),\r\n    lives,\r\n    speed\r\n  };\r\n};\r\n\r\nconst getDistortedDirection = (vector, distortionLevel = 0.3) => {\r\n  const getComponent = () =>\r\n    Math.random() * distortionLevel - distortionLevel / 2;\r\n  const distortion = new Vector(getComponent(), getComponent());\r\n  return vector.add(distortion).normalize();\r\n};\r\n\r\nconst getNewPaddle = (paddle, size, distance, movement) => {\r\n  if (!movement) return paddle;\r\n  const direction = movement === MOVEMENT.LEFT ? LEFT : RIGHT;\r\n\r\n  const { x } = paddle.position.add(direction.scaleBy(distance));\r\n  const withNewX = (x) => ({\r\n    ...paddle,\r\n    position: new Vector(x, paddle.position.y)\r\n  });\r\n  if (x < 0) {\r\n    return withNewX(0);\r\n  }\r\n  if (x + paddle.width > size.width) {\r\n    return withNewX(size.width - paddle.width);\r\n  }\r\n  return withNewX(x);\r\n};\r\n\r\nconst isInBoundaries = (oneSide, otherSide, oneBoundary, otherBoundary) =>\r\n  (oneSide >= oneBoundary && oneSide <= otherBoundary) ||\r\n  (otherSide >= oneBoundary && otherSide <= otherBoundary);\r\n\r\nconst getAdjustedVector = (normal, vector, minAngle = 15) => {\r\n  const angle = normal.angleBetween(vector);\r\n  const maxAngle = 90 - minAngle;\r\n  if (angle < 0) {\r\n    if (angle > -minAngle) {\r\n      return normal.rotate(-minAngle);\r\n    }\r\n    if (angle < -maxAngle) {\r\n      return normal.rotate(-maxAngle);\r\n    }\r\n  } else {\r\n    if (angle < minAngle) {\r\n      return normal.rotate(minAngle);\r\n    }\r\n    if (angle > maxAngle) {\r\n      return normal.rotate(maxAngle);\r\n    }\r\n  }\r\n  return vector;\r\n};\r\n\r\nexport const getNewGameState = (state, movement, timespan) => {\r\n  const { size, speed, lives } = state;\r\n  const distance = timespan * DISTANCE_IN_MS * speed;\r\n  const paddle = getNewPaddle(state.paddle, size, distance, movement);\r\n\r\n  const { radius } = state.ball;\r\n  const oldDirection = state.ball.direction;\r\n  const newBallCenter = state.ball.center.add(oldDirection.scaleBy(distance));\r\n  const ballBottom = newBallCenter.y + radius;\r\n  if (ballBottom > size.height) {\r\n    return {\r\n      ...state,\r\n      ...getInitialPaddleAndBall(size.width, size.height, paddle.width),\r\n      lives: lives - 1\r\n    };\r\n  }\r\n\r\n  const withNewBallProps = (props) => ({\r\n    ...state,\r\n    paddle,\r\n    ball: {\r\n      ...state.ball,\r\n      ...props\r\n    }\r\n  });\r\n\r\n  const withNewBallDirection = (normal) => {\r\n    const distorted = getDistortedDirection(oldDirection.reflect(normal));\r\n    const direction = getAdjustedVector(normal, distorted);\r\n    return withNewBallProps({ direction });\r\n  };\r\n  const ballLeft = newBallCenter.x - radius;\r\n  const ballRight = newBallCenter.x + radius;\r\n  const ballTop = newBallCenter.y - radius;\r\n  const paddleLeft = paddle.position.x;\r\n  const paddleRight = paddleLeft + paddle.width;\r\n  const paddleTop = paddle.position.y;\r\n\r\n  const ballGoingDown = Math.abs(UP.angleBetween(oldDirection)) > 90;\r\n  const hitPaddle =\r\n    ballGoingDown &&\r\n    ballBottom >= paddleTop &&\r\n    ballRight >= paddleLeft &&\r\n    ballLeft <= paddleRight;\r\n  if (hitPaddle) return withNewBallDirection(UP);\r\n  if (ballTop <= 0) return withNewBallDirection(DOWN);\r\n  if (ballLeft <= 0) return withNewBallDirection(RIGHT);\r\n  if (ballRight >= size.width) return withNewBallDirection(LEFT);\r\n\r\n  const block = state.blocks.find(\r\n    ({ position, width, height }) =>\r\n      isInBoundaries(ballTop, ballBottom, position.y, position.y + height) &&\r\n      isInBoundaries(ballLeft, ballRight, position.x, position.x + width)\r\n  );\r\n  if (block) {\r\n    const density = block.density - 1;\r\n    const newBlock = { ...block, density };\r\n    const blocks =\r\n      density < 0\r\n        ? withoutElement(state.blocks, block)\r\n        : updateElement(state.blocks, block, newBlock);\r\n\r\n    const getNewBallNormal = () => {\r\n      const blockTop = block.position.y;\r\n      const blockBottom = blockTop + block.height;\r\n      const blockLeft = block.position.x;\r\n      if (ballTop > blockTop - radius && ballBottom < blockBottom + radius) {\r\n        if (ballLeft < blockLeft) return LEFT;\r\n        if (ballRight > blockLeft + block.width) return RIGHT;\r\n      }\r\n      if (ballTop > blockTop) return DOWN;\r\n      if (ballTop <= blockTop) return UP;\r\n    };\r\n    return {\r\n      ...withNewBallDirection(getNewBallNormal()),\r\n      blocks\r\n    };\r\n  }\r\n  return withNewBallProps({ center: newBallCenter });\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({ level, unit }) => (\r\n  <text x={unit} y={unit * 2} fontSize={unit} className=\"level\">\r\n    LEVEL: {level}\r\n  </text>\r\n);\r\n","import React from \"react\";\r\n\r\nimport { getRange } from \"../utils\";\r\n\r\nexport default ({ lives, containerWidth, unit }) => {\r\n  const width = unit * 2;\r\n  return getRange(lives).map((i) => (\r\n    <rect\r\n      className=\"life\"\r\n      rx={unit / 4}\r\n      height={unit}\r\n      width={width}\r\n      y={unit}\r\n      x={containerWidth - unit - width * (i + 1) - (unit / 2) * i}\r\n      key={i}\r\n    />\r\n  ));\r\n};\r\n","import React from \"react\";\r\nimport { getRange } from \"../utils\";\r\nimport { BLOCK_MAX_DENSITY } from \"../game/levels\";\r\n\r\nconst colors = getRange(BLOCK_MAX_DENSITY).map(\r\n  (i) => `rgba(26, 188, 156, ${1 / (BLOCK_MAX_DENSITY - i)})`\r\n);\r\n\r\nexport default ({ x, y, width, height, density }) => (\r\n  <rect\r\n    className=\"block\"\r\n    fill={colors[density]}\r\n    x={x}\r\n    y={y}\r\n    width={width}\r\n    height={height}\r\n  />\r\n);\r\n","import React from \"react\";\r\n\r\nexport default ({ x, y, width, height }) => (\r\n  <rect className=\"paddle\" x={x} y={y} width={width} height={height} />\r\n);\r\n","import React from \"react\";\r\n\r\nexport default ({ x, y, radius }) => (\r\n  <circle className=\"ball\" cx={x} cy={y} r={radius} />\r\n);\r\n","import React, { useEffect, useReducer } from \"react\";\r\n\r\nimport { LEVELS } from \"../game/levels\";\r\nimport { MOVEMENT, getNewGameState, getGameStateFromLevel } from \"../game/core\";\r\nimport { registerListener } from \"../utils\";\r\n\r\nimport Level from \"./level\";\r\nimport Lives from \"./lives\";\r\nimport Block from \"./block\";\r\nimport Paddle from \"./paddle\";\r\nimport Ball from \"./ball\";\r\n\r\nconst MOVEMENT_KEYS = {\r\n  LEFT: [65, 37],\r\n  RIGHT: [68, 39]\r\n};\r\n\r\nconst STOP_KEY = 32;\r\n\r\nconst UPDATE_EVERY = 1000 / 60;\r\n\r\nconst getInitialLevel = () => {\r\n  const inState = localStorage.getItem(\"level\");\r\n  return inState ? parseInt(inState, 10) : 0;\r\n};\r\n\r\nconst getProjectors = (containerSize, gameSize) => {\r\n  const widthRatio = containerSize.width / gameSize.width;\r\n  const heightRatio = containerSize.height / gameSize.height;\r\n  const unitOnScreen = Math.min(widthRatio, heightRatio);\r\n\r\n  return {\r\n    projectDistance: (distance) => distance * unitOnScreen,\r\n    projectVector: (vector) => vector.scaleBy(unitOnScreen)\r\n  };\r\n};\r\n\r\nconst getInitialState = (containerSize) => {\r\n  const level = getInitialLevel();\r\n  const game = getGameStateFromLevel(LEVELS[level]);\r\n  const { projectDistance, projectVector } = getProjectors(\r\n    containerSize,\r\n    game.size\r\n  );\r\n  return {\r\n    level,\r\n    game,\r\n    containerSize,\r\n    projectDistance,\r\n    projectVector,\r\n    time: Date.now(),\r\n    stopTime: undefined,\r\n    movement: undefined\r\n  };\r\n};\r\n\r\nconst ACTION = {\r\n  CONTAINER_SIZE_CHANGE: \"CONTAINER_SIZE_CHANGE\",\r\n  KEY_DOWN: \"KEY_DOWN\",\r\n  KEY_UP: \"KEY_UP\",\r\n  TICK: \"TICK\"\r\n};\r\n\r\nconst HANDLER = {\r\n  [ACTION.CONTAINER_SIZE_CHANGE]: (state, containerSize) => ({\r\n    ...state,\r\n    containerSize,\r\n    ...getProjectors(containerSize, state.game.size)\r\n  }),\r\n  [ACTION.KEY_DOWN]: (state, key) => {\r\n    if (MOVEMENT_KEYS.LEFT.includes(key)) {\r\n      return { ...state, movement: MOVEMENT.LEFT };\r\n    } else if (MOVEMENT_KEYS.RIGHT.includes(key)) {\r\n      return { ...state, movement: MOVEMENT.RIGHT };\r\n    }\r\n    return state;\r\n  },\r\n  [ACTION.KEY_UP]: (state, key) => {\r\n    const newState = { ...state, movement: undefined };\r\n    if (key === STOP_KEY) {\r\n      if (state.stopTime) {\r\n        return {\r\n          ...newState,\r\n          stopTime: undefined,\r\n          time: state.time + Date.now() - state.stopTime\r\n        };\r\n      } else {\r\n        return { ...newState, stopTime: Date.now() };\r\n      }\r\n    }\r\n    return newState;\r\n  },\r\n  [ACTION.TICK]: (state) => {\r\n    if (state.stopTime) return state;\r\n\r\n    const time = Date.now();\r\n    const newGame = getNewGameState(\r\n      state.game,\r\n      state.movement,\r\n      time - state.time\r\n    );\r\n    const newState = { ...state, time };\r\n    if (newGame.lives < 1) {\r\n      return { ...newState, game: getGameStateFromLevel(LEVELS[state.level]) };\r\n    } else if (newGame.blocks.length < 1) {\r\n      const level =\r\n        state.level === LEVELS.length ? state.level : state.level + 1;\r\n      localStorage.setItem(\"level\", level);\r\n      const game = getGameStateFromLevel(LEVELS[state.level]);\r\n      return {\r\n        ...newState,\r\n        level,\r\n        game,\r\n        ...getProjectors(state.containerSize, game.size)\r\n      };\r\n    }\r\n    return { ...newState, game: newGame };\r\n  }\r\n};\r\n\r\nconst reducer = (state, { type, payload }) => {\r\n  const handler = HANDLER[type];\r\n  if (!handler) return state;\r\n  return handler(state, payload);\r\n};\r\n\r\nexport default (containerSize) => {\r\n  const [state, dispatch] = useReducer(reducer, containerSize, getInitialState);\r\n  const act = (type, payload) => dispatch({ type, payload });\r\n  const {\r\n    projectDistance,\r\n    projectVector,\r\n    level,\r\n    game: {\r\n      blocks,\r\n      paddle,\r\n      ball,\r\n      size: { width, height },\r\n      lives\r\n    }\r\n  } = state;\r\n\r\n  useEffect(() => act(ACTION.CONTAINER_SIZE_CHANGE, containerSize), [\r\n    containerSize\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const onKeyDown = ({ which }) => act(ACTION.KEY_DOWN, which);\r\n    const onKeyUp = ({ which }) => act(ACTION.KEY_UP, which);\r\n    const tick = () => act(ACTION.TICK);\r\n\r\n    const timerId = setInterval(tick, UPDATE_EVERY);\r\n    const unregisterKeydown = registerListener(\"keydown\", onKeyDown);\r\n    const unregisterKeyup = registerListener(\"keyup\", onKeyUp);\r\n    return () => {\r\n      clearInterval(timerId);\r\n      unregisterKeydown();\r\n      unregisterKeyup();\r\n    };\r\n  }, []);\r\n\r\n  const viewWidth = projectDistance(width);\r\n  const unit = projectDistance(ball.radius);\r\n  return (\r\n    <svg width={viewWidth} height={projectDistance(height)} className=\"scene\">\r\n      <Level unit={unit} level={level + 1} />\r\n      <Lives lives={lives} containerWidth={viewWidth} unit={unit} />\r\n      {blocks.map(({ density, position, width, height }) => (\r\n        <Block\r\n          density={density}\r\n          key={`${position.x}-${position.y}`}\r\n          width={projectDistance(width)}\r\n          height={projectDistance(height)}\r\n          {...projectVector(position)}\r\n        />\r\n      ))}\r\n      <Paddle\r\n        width={projectDistance(paddle.width)}\r\n        height={projectDistance(paddle.height)}\r\n        {...projectVector(paddle.position)}\r\n      />\r\n      <Ball {...projectVector(ball.center)} radius={unit} />\r\n    </svg>\r\n  );\r\n};\r\n","import Page from \"./components/page\";\r\n\r\nexport default Page;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nimport Scene from \"./scene\";\r\nimport { registerListener } from \"../utils\";\r\n\r\nexport default () => {\r\n  const sceneContainer = useRef();\r\n  const [size, setSize] = useState();\r\n\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      const { width, height } = sceneContainer.current.getBoundingClientRect();\r\n      setSize({ width, height });\r\n    };\r\n    const unregisterResizeListener = registerListener(\"resize\", onResize);\r\n    onResize();\r\n    return unregisterResizeListener;\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"scene-container\" ref={sceneContainer}>\r\n        {size && <Scene width={size.width} height={size.height} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}